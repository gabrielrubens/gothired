name: CD - Deploy GotHired.ai with Kamal 2

on:
  push:
    branches:
      - main
      - staging
  workflow_dispatch:
    inputs:
      environment:
        description: "Choose environment (staging/production)"
        required: true
        default: "staging"

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      VPS_HOST: ${{ secrets.VPS_HOST }}   # e.g. "deployer@46.202.173.58"
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      KAMAL_REGISTRY_PASSWORD: ${{ secrets.KAMAL_REGISTRY_PASSWORD }}

    steps:
      - name: ðŸš€ Checkout Code
        uses: actions/checkout@v4

      - name: ðŸ’Ž Setup Ruby and Bundler
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-version: '~>2.6'
          cache-version: 3

      - name: ðŸ”Ž Check Ruby & Bundler Environment
        run: |
          echo "Ruby version: $(ruby -v)"
          echo "Bundle location: $(which bundle || echo 'not found')"
          bundle -v

      - name: ðŸ”‘ Setup SSH Access
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          # Extract hostname from VPS_HOST (e.g., "deployer@46.202.173.58" -> "46.202.173.58")
          host=$(echo "$VPS_HOST" | awk -F'@' '{print $NF}')
          ssh-keyscan -H "$host" >> ~/.ssh/known_hosts

          # Create SSH config for non-interactive sessions.
          cat > ~/.ssh/config << EOF
          Host *
            StrictHostKeyChecking no
            UserKnownHostsFile=/dev/null
            BatchMode yes
            PasswordAuthentication no
          EOF
          chmod 600 ~/.ssh/config

          # Test the SSH connection.
          ssh -o BatchMode=yes "$VPS_HOST" "echo SSH connection test" || echo "SSH test failed, but continuing"

      - name: ðŸ“¦ Install Gem Dependencies
        run: bundle install --deployment --without development test

      - name: ðŸ›  Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: ðŸ”‘ Log in to Docker Registry
        run: echo "$KAMAL_REGISTRY_PASSWORD" | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}

      - name: ðŸ“¦ Build & Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/gothired:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/gothired:latest
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}

      - name: ðŸš€ Deploy to Production
        if: github.ref == 'refs/heads/main'
        run: |
          export DOMAIN="gothired.ai"
          export KAMAL_ENV="production"
          bin/kamal deploy
          
      - name: ðŸš€ Deploy to Staging
        if: github.ref != 'refs/heads/main'
        run: |
          export DOMAIN="staging.gothired.ai"
          export KAMAL_ENV="staging"
          bin/kamal deploy